name: Test Preview Deployment

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test-preview:
    name: Build, Deploy & Test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run check-types || echo "Type checking skipped"

      - name: Build TurboRepo
        run: pnpm build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SITE_NAME: "Placement Quest"

      - name: Deploy to Vercel Preview
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          working-directory: ./

      - name: Wait for deployment to be ready
        run: |
          echo "Waiting 30 seconds for deployment to initialize..."
          sleep 30

      - name: Test deployment
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.preview-url }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: node scripts/test-deployment.mjs

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const jobStatus = '${{ job.status }}';
            const previewUrl = '${{ steps.deploy.outputs.preview-url }}';

            const statusIcon = jobStatus === 'success' ? '‚úÖ' : '‚ùå';
            const statusText = jobStatus === 'success' ? 'passed' : 'failed';

            const body = `## ${statusIcon} Deployment Test ${statusText}

            **Preview URL:** ${previewUrl}

            ### Test Results
            - ‚úÖ Build completed
            - ${jobStatus === 'success' ? '‚úÖ' : '‚ùå'} Health check ${statusText}
            - ${jobStatus === 'success' ? '‚úÖ' : '‚ùå'} Article rendering ${statusText}

            ${jobStatus === 'success'
              ? 'üéâ All tests passed! Safe to merge.'
              : '‚ö†Ô∏è Tests failed. Please review the logs before merging.'}

            [View full test logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

      - name: Fail if tests failed
        if: failure()
        run: |
          echo "::error::Deployment tests failed. Check logs above."
          exit 1
