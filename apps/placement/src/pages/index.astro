---
export const prerender = false;

import BaseLayout from '@quest/ui/layouts/base.astro';
import { initializeSql, getRecentArticles } from '@quest/db';

// Initialize Neon
initializeSql(import.meta.env.DATABASE_URL);

const siteName = import.meta.env.SITE_NAME?.toLowerCase() || 'placement';
const recentArticles = await getRecentArticles(siteName, 10);
---

<BaseLayout
  title={import.meta.env.SITE_NAME || 'Placement'}
  description={import.meta.env.SITE_TAGLINE || 'Navigate the evolving landscape'}
>
  <div class="mx-auto max-w-6xl px-4 py-8">
    <section class="mb-12 text-center">
      <h1 class="mb-4 text-5xl font-bold text-gray-900 dark:text-white">
        {import.meta.env.SITE_NAME || 'Placement'}
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400">
        {import.meta.env.SITE_TAGLINE || 'Navigate the evolving landscape'}
      </p>
    </section>

    {recentArticles && recentArticles.length > 0 && (
      <section>
        <h2 class="mb-8 text-3xl font-bold text-gray-900 dark:text-white">Recent Articles</h2>
        <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {recentArticles.map((article) => (
            <article class="rounded-lg border border-gray-200 p-6 hover:shadow-lg transition-shadow dark:border-gray-700">
              <a href={`/${article.slug}`} class="group">
                {article.featured_image_url && (
                  <img
                    src={article.featured_image_url}
                    alt={article.title || article.headline_title}
                    class="mb-4 w-full h-48 rounded object-cover"
                  />
                )}
                <h3 class="mb-2 text-xl font-semibold group-hover:text-blue-600 dark:text-white">
                  {article.title || article.headline_title}
                </h3>
                {article.excerpt && (
                  <p class="mb-4 text-gray-600 line-clamp-3 dark:text-gray-400">
                    {article.excerpt}
                  </p>
                )}
                <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-500">
                  {article.created_at && (
                    <time datetime={article.created_at}>
                      {new Date(article.created_at).toLocaleDateString('en-GB', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                  )}
                  {article.reading_time_minutes && (
                    <>
                      <span>â€¢</span>
                      <span>{article.reading_time_minutes} min read</span>
                    </>
                  )}
                </div>
              </a>
            </article>
          ))}
        </div>
      </section>
    )}
  </div>
</BaseLayout>
