---
import type { Article } from '@quest/db';

interface Props {
  article: Article;
}

const { article } = Astro.props;
const publishDate = article.created_at
  ? new Date(article.created_at).toLocaleDateString('en-GB', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : '';
---

<article class="bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden group flex flex-col lg:flex-row">
  {/* Featured image - always show */}
  <div class="lg:w-1/2 overflow-hidden">
    {article.featured_image_url ? (
      <img
        src={article.featured_image_url}
        alt={article.title || article.headline_title}
        class="w-full h-64 lg:h-full object-cover group-hover:scale-105 transition-transform duration-500"
        loading="lazy"
      />
    ) : (
      <div class="w-full h-64 lg:h-full flex items-center justify-center bg-gradient-to-br from-primary to-primary-dark">
        <svg class="w-24 h-24 text-white/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
        </svg>
      </div>
    )}
  </div>

  {/* Content */}
  <div class="lg:w-1/2 p-8">
    <span class="inline-block px-3 py-1 text-xs font-semibold text-white bg-primary rounded-full mb-4">
      Featured
    </span>

    <h2 class="text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-4 group-hover:text-primary transition-colors">
      <a href={`/${article.slug}`} class="hover:underline">
        {article.title || article.headline_title}
      </a>
    </h2>

    {article.excerpt && (
      <p class="text-gray-600 dark:text-gray-300 text-lg mb-6 line-clamp-3">
        {article.excerpt}
      </p>
    )}

    <div class="flex items-center justify-between">
      <div class="flex items-center gap-3 text-sm text-gray-500 dark:text-gray-400">
        {publishDate && <time datetime={article.created_at}>{publishDate}</time>}
        {article.reading_time_minutes && (
          <>
            <span>â€¢</span>
            <span>{article.reading_time_minutes} min read</span>
          </>
        )}
      </div>

      <a
        href={`/${article.slug}`}
        class="inline-flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors"
      >
        Read More
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</article>
