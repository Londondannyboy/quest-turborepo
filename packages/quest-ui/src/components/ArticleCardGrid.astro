---
import type { Article } from '@quest/db';

interface Props {
  article: Article;
}

const { article } = Astro.props;
const publishDate = article.created_at
  ? new Date(article.created_at).toLocaleDateString('en-GB', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : '';
---

<article class="bg-white dark:bg-gray-800 rounded-lg shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden group h-full flex flex-col">
  <a href={`/${article.slug}`} class="block flex-1 flex flex-col">
    {/* Image */}
    {article.featured_image_url && (
      <div class="aspect-video overflow-hidden">
        <img
          src={article.featured_image_url}
          alt={article.title || article.headline_title}
          class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
          loading="lazy"
        />
      </div>
    )}

    {/* Content */}
    <div class="p-6 flex-1 flex flex-col">
      <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 line-clamp-2 group-hover:text-primary transition-colors">
        {article.title || article.headline_title}
      </h3>

      {article.excerpt && (
        <p class="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3 flex-1">
          {article.excerpt}
        </p>
      )}

      <div class="flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400 mt-auto pt-4 border-t border-gray-200 dark:border-gray-700">
        {publishDate && <time datetime={article.created_at}>{publishDate}</time>}
        {article.reading_time_minutes && (
          <>
            <span>â€¢</span>
            <span>{article.reading_time_minutes} min read</span>
          </>
        )}
      </div>
    </div>
  </a>
</article>
