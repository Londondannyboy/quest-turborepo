---
/**
 * Rich Content Section
 * For embedding long-form content on homepage (replaces hero article pages)
 */

export interface ContentBlock {
  heading: string;
  content: string;
  links?: { text: string; href: string; }[];
}

interface Props {
  title: string;
  intro?: string;
  blocks: ContentBlock[];
  ctaText?: string;
  ctaLink?: string;
}

const {
  title,
  intro,
  blocks,
  ctaText,
  ctaLink,
} = Astro.props;
---

<section class="py-16 lg:py-20 bg-white dark:bg-gray-900">
  <div class="mx-auto max-w-4xl px-4 lg:px-8">
    <!-- Title -->
    <h2 class="text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-6">
      {title}
    </h2>

    <!-- Intro -->
    {intro && (
      <p class="text-lg text-gray-600 dark:text-gray-400 mb-10 leading-relaxed">
        {intro}
      </p>
    )}

    <!-- Content Blocks -->
    <div class="space-y-10">
      {blocks.map((block) => (
        <div class="border-l-4 border-primary pl-6">
          <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3">
            {block.heading}
          </h3>
          <div class="prose prose-gray dark:prose-invert max-w-none mb-4">
            <p class="text-gray-600 dark:text-gray-300 leading-relaxed" set:html={block.content} />
          </div>

          {/* Related Links */}
          {block.links && block.links.length > 0 && (
            <div class="flex flex-wrap gap-3 mt-4">
              {block.links.map((link) => (
                <a
                  href={link.href}
                  class="inline-flex items-center gap-1 text-sm font-medium text-primary hover:text-blue-700 dark:hover:text-blue-400 transition-colors"
                >
                  {link.text}
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </a>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>

    <!-- CTA -->
    {ctaText && ctaLink && (
      <div class="mt-12 text-center">
        <a
          href={ctaLink}
          class="inline-flex items-center gap-2 px-6 py-3 bg-primary text-white font-semibold rounded-lg hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors shadow-md hover:shadow-lg"
        >
          {ctaText}
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
          </svg>
        </a>
      </div>
    )}
  </div>
</section>
