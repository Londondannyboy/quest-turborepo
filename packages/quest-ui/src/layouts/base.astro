---
import { getThemeName } from '../utils/theme';
import '../styles/global.css';

interface Props {
  title: string;
  description: string;
  image?: string;
  article?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
}

const { title, description, image, article = false, publishedTime, modifiedTime } = Astro.props;

// Get theme from environment
const themeVariant = import.meta.env.THEME_VARIANT || 'financial';
const defaultTheme = getThemeName(themeVariant, false);

// Get site info
const siteName = import.meta.env.SITE_NAME || 'Quest';
const siteUrl = Astro.site?.toString() || Astro.url.origin;
const currentUrl = new URL(Astro.url.pathname, siteUrl).toString();

// Default OG image if none provided
const ogImage = image || `${siteUrl}/og-default.jpg`;
---

<!doctype html>
<html lang="en" data-theme={defaultTheme}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={currentUrl} />

    <!-- OpenGraph / Facebook -->
    <meta property="og:type" content={article ? 'article' : 'website'} />
    <meta property="og:url" content={currentUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:site_name" content={siteName} />
    {article && publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {article && modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={currentUrl} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />

    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      '@context': 'https://schema.org',
      '@type': article ? 'Article' : 'WebSite',
      'headline': title,
      'description': description,
      'url': currentUrl,
      'image': ogImage,
      'publisher': {
        '@type': 'Organization',
        'name': siteName,
        'url': siteUrl
      },
      ...(article && publishedTime ? { 'datePublished': publishedTime } : {}),
      ...(article && modifiedTime ? { 'dateModified': modifiedTime } : {})
    })} />

    <!-- Inter Font -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap"
      rel="stylesheet"
    />

    <!-- Theme persistence script -->
    <script is:inline>
      // Load saved theme or use default
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        document.documentElement.setAttribute('data-theme', savedTheme);
      }
    </script>
  </head>
  <body class="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
    <slot />
  </body>
</html>
